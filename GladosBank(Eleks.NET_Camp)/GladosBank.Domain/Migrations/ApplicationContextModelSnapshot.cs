// <auto-generated />
using System;
using GladosBank.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GladosBank.Domain.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GladosBank.Domain.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_CurrencyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("_UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("_CurrencyId");

                    b.HasIndex("_UserId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("GladosBank.Domain.Documentation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DescriptionDocumentation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Documentations");
                });

            modelBuilder.Entity("GladosBank.Domain.Information", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescriptionInformation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Informations");
                });

            modelBuilder.Entity("GladosBank.Domain.Models.Currency", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("GladosBank.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("GladosBank.Domain.Admin", b =>
                {
                    b.HasBaseType("GladosBank.Domain.User");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("GladosBank.Domain.Customer", b =>
                {
                    b.HasBaseType("GladosBank.Domain.User");

                    b.Property<int?>("_AccountId")
                        .HasColumnType("int");

                    b.HasIndex("_AccountId");

                    b.HasDiscriminator().HasValue("Customer");
                });

            modelBuilder.Entity("GladosBank.Domain.Worker", b =>
                {
                    b.HasBaseType("GladosBank.Domain.User");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue("Worker");
                });

            modelBuilder.Entity("GladosBank.Domain.Account", b =>
                {
                    b.HasOne("GladosBank.Domain.Models.Currency", "_Currency")
                        .WithMany()
                        .HasForeignKey("_CurrencyId");

                    b.HasOne("GladosBank.Domain.User", "_User")
                        .WithMany()
                        .HasForeignKey("_UserId");

                    b.Navigation("_Currency");

                    b.Navigation("_User");
                });

            modelBuilder.Entity("GladosBank.Domain.Customer", b =>
                {
                    b.HasOne("GladosBank.Domain.Account", "_Account")
                        .WithMany()
                        .HasForeignKey("_AccountId");

                    b.Navigation("_Account");
                });
#pragma warning restore 612, 618
        }
    }
}
